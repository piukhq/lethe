stages:
  - test
  - dev
  - staging
  - prod

tests:
  stage: test
  image: binkhq/python:3.8
  before_script:
    - pip install pipenv==2018.11.26
    - pipenv install --dev
  script:
    - pipenv run pytest app/tests --cov=app

complexity:
  stage: test
  image: binkhq/python:3.8
  before_script:
    - pip install xenon
  script:
    - xenon --max-average A --max-modules B --max-absolute B .

flake8:
  stage: test
  image: binkhq/python:3.8
  before_script:
    - pip install flake8
  script:
    - flake8

dev:
  stage: dev
  image: docker:latest
  environment:
    name: dev
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="develop-$(date +%F-%H%M%S)"
    - docker build --pull -t "$CI_REGISTRY/lethe:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/lethe:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/lethe:$CTAG"
  only:
    - develop

staging:
  stage: staging
  image: docker:latest
  environment:
    name: staging
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - export CTAG="staging-$CI_COMMIT_TAG"
    - docker build --pull -t "$CI_REGISTRY/lethe:$CTAG" .
    - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/lethe:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
    - docker push "$CI_REGISTRY/lethe:$CTAG"
  only:
    - tags

prod:
  stage: prod
  image: binkops.azurecr.io/tagbot:latest
  environment:
    name: prod
  script:
    - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/lethe:staging-$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
  when: manual
  only:
    - tags
